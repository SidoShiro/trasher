name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Check tag points to master
      id: check_branch
      run: |
        commit_sha=$(git rev-parse HEAD)
        main_sha=$(git rev-parse origin/master)
        echo "tag_commit=$commit_sha" >> $GITHUB_OUTPUT
        echo "master_commit=$main_sha" >> $GITHUB_OUTPUT
      continue-on-error: false

    - name: Abort if tag is not on master
      if: steps.check_branch.outputs.tag_commit != steps.check_branch.outputs.master_commit
      run: |
        exit 0
    
    - name: Make
      run: |
        make
        mkdir -p release
        cp libtrasher.a release/
        cp libtrasher.so release/

    - name: Get the version
      id: get_version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create a GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Static Lib
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/libtrasher.a
        asset_name: libtrasher.a
        asset_content_type: application/x-archive

    - name: Upload Shared Lib
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/libtrasher.so
        asset_name: libtrasher.so
        asset_content_type: application/x-sharedlib

